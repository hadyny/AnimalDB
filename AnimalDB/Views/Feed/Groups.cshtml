@model AnimalDB.Web.Models.FeedGroupsViewModel

<h3>@Html.ActionLink("Back to Rooms", "Index", null, new { @class = "btn btn-primary" })</h3>

@if (Model.groups.Count() != 0)
{
    <h3>
        KEY: <span class="btn btn-success ">All animals fed today</span>&nbsp;<span class="btn btn-orange ">Some animals fed today</span>&nbsp;<span class="btn btn-danger ">No animals fed today</span>
    </h3>
}
<hr />

<h1>@Model.Room.Description</h1>

@if ((Model.NumAppAnimals != 0 || Model.AnimalsNotInDB) &&
    (User.IsInRole("Technician") ||
    User.IsInRole("Administrator") ||
    DateTime.Now.DayOfWeek == DayOfWeek.Saturday ||
    DateTime.Now.DayOfWeek == DayOfWeek.Sunday))
{



    if (!Model.AnimalsNotInDB)
    {
        if (!Model.AllChecked)
        {
            @Html.ActionLink("Mark all animals in the room as checked today", "MarkAllAnimalsChecked", new { roomId = Model.Room.Id }, new { @class = "btn  btn-success" })
        }
        else
        {
            <p class="lead">All animals have been checked today <span class="text-success fas fa-check-circle"></span></p>
        }
    }
    else
    {
        if (!Model.LastRoomCheckToday)
        {
            @Html.ActionLink("Mark the room as checked today", "MarkRoomChecked", new { roomId = Model.Room.Id }, new { @class = "btn  btn-success" })
        }
        else
        {
            <p class="lead">Room has been checked today <span class="text-success fas fa-check-circle"></span></p>
        }
    }

}
<hr />
<div class="row">

    @if (Model.groups.Count() != 0)
    {
        <div class="col-md-6">

            <h2>Select Feeding Group:</h2>

            <ul>
                @foreach (var item in Model.groups.Where(m => m.Animals.Count() != 0).OrderBy(m => m.Description))
                {
                    string _class = "";
                    int fed = item.Animals.Where(m => m.Feeds.Count(n => n.Date == DateTime.Now.Date && n.FeedAmount != null) != 0 || (m.Feeds.Count() != 0 && m.Feeds.OrderBy(p => p.Date).Last().FeedAmount == -1)).Count();
                    //int notChecked = item.Animals.Count(m => m.DeathDate == null && m.LastChecked.Date != DateTime.Now.Date);
                    int total = item.Animals.Count(m => m.DeathDate == null);

                    if (fed == total)
                    {
                        _class = "btn-success";
                    }
                    else if (fed > 0 && fed < total)
                    {
                        _class = "btn-orange";
                    }
                    else
                    {
                        _class = "btn-danger";
                    }
                    <li>
                        @Html.ActionLink(Html.DisplayFor(modelItem => item.Description).ToString(), "Add", "Feed", new { id = item.Id }, new { @class = "btn  " + _class })
                    </li>
                }
            </ul>
        </div>
    }




    else
    {
        <div class="col-md-6">
            <h4>Animal checks from the past week:</h4>
            <hr />
            <table class="table table-striped">
                <thead><tr><th>Day</th><th>Checked</th></tr></thead>
                @if (!Model.AnimalsNotInDB)
                {
                    for (DateTime date = DateTime.Now.Date; date > DateTime.Now.Date.AddDays(-7); date = date.AddDays(-1))
                    {
                    <tr>
                        <td>
                            @date.ToShortDateString()
                        </td>
                        <td>
                            <div class="btn-group dropdown">
                                @if (date.Date == DateTime.Now.Date)
                                {
                                    if (Model.Room.Animals.Count(m => m.LastChecked.Date == DateTime.Today.Date && m.DeathDate == null) == Model.Room.Animals.Count(m => m.DeathDate == null))
                                    {
                                        <button title="All animals checked" type="button" class="btn btn-sm btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-check-circle"></span>
                                        </button>

                                    }
                                    else if (Model.Room.Animals.Count(m => m.LastChecked.Date == DateTime.Today.Date && m.DeathDate == null) == 0)
                                    {
                                        <button title="Animals not checked" type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-times-circle"></span>
                                        </button>
                                    }
                                    else
                                    {
                                        <button title="Some animals not checked" type="button" class="btn btn-sm btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-exclamation-circle"></span>
                                        </button>
                                    }
                                }
                                else if (Model.Room.Animals.Count(m => m.DeathDate == null && m.MissedChecks.Count(n => n.Timestamp.Date == date.Date) != 0) == 0)
                                {
                                    <button title="All animals checked" type="button" class="btn btn-sm btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-check-circle"></span>
                                    </button>
                                }
                                else if (Model.Room.Animals.Count(m => m.DeathDate == null && m.MissedChecks.Count(n => n.Timestamp.Date == date.Date) != 0) == Model.Room.Animals.Count(m => m.DeathDate == null))
                                {
                                    <button title="Animals not checked" type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-times-circle"></span>
                                    </button>
                                }
                                else
                                {
                                    <button title="Some animals not checked" type="button" class="btn btn-sm btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-exclamation-circle"></span>
                                    </button>
                                }
                                <ul class="dropdown-menu">
                                    @foreach (var animal in Model.Room.Animals.Where(m => m.DeathDate == null))
                                    {
                                        if (animal.MissedChecks.Count(m => m.Timestamp.Date == date.Date) != 0 || (date.Date == DateTime.Now.Date && animal.LastChecked.Date != DateTime.Now.Date))
                                        {
                                            <li class="dropdown-item"><a><span class="text-danger fas fa-times-circle"></span> @animal.UniqueAnimalId</a></li>
                                        }
                                        else
                                        {
                                            <li class="dropdown-item"><a><span class="text-success fas fa-check-circle"></span> @animal.UniqueAnimalId</a></li>
                                        }
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                    }
                }
                else
                {
                    for (DateTime date = DateTime.Now.Date; date > DateTime.Now.Date.AddDays(-7); date = date.AddDays(-1))
                    {
                        <tr>
                            <td>
                                @date.ToShortDateString()
                            </td>
                            <td>
                                <div class="btn-group">
                                    @if (date.Date == DateTime.Now.Date)
                                    {
                                        if (Model.Room.NoDBAnimalsLastCheck.HasValue && Model.Room.NoDBAnimalsLastCheck.Value.Date == DateTime.Now.Date)
                                        {
                                            <button title="Room checked" type="button" class="btn btn-success" aria-haspopup="true" aria-expanded="false">
                                                <span class="fas fa-check-circle"></span>
                                            </button>

                                        }
                                        else 
                                        {
                                            <button title="Room not checked" type="button" class="btn btn-danger" aria-haspopup="true" aria-expanded="false">
                                                <span class="fas fa-times-circle"></span>
                                            </button>
                                        }
                                    }
                                    else if (Model.Room.MissedChecks.Count(m => m.Timestamp.Date == date.Date) == 0)
                                    {
                                        <button title="Room checked" type="button" class="btn btn-success" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-check-circle"></span>
                                        </button>
                                    }
                                    else 
                                    {
                                        <button title="Room not checked" type="button" class="btn btn-danger" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-times-circle"></span>
                                        </button>
                                    }
                                    
                                </div>

                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    }




    @if (Model.NumAppAnimals != 0)
            {
        <div class="col-md-6">

            @if (!Model.DoneToday && (User.IsInRole("Technician") || User.IsInRole("Administrator")))
            {
                <h4>
                    There should be @Model.NumAppAnimals @if (Model.NumAppAnimals == 1)
                    { <text>animal</text> }
                    else
                    { <text>animals</text> } (including @Model.GMOCount GMO) in this room.
                    @Html.ActionLink("View All", "Animals", "Rooms", new { id = Model.Room.Id, grps = "1" }, new { @class = "btn btn-sm btn-outline-dark" })
                    @if (Model.GMOCount != 0)
                    {
                    @Html.ActionLink("View GMO", "Animals", "Rooms", new { id = Model.Room.Id, grps = "1", gmo = "1" }, new { @class = "btn btn-sm btn-outline-dark" })
                    }
                </h4>
                        <form method="post"><button type="submit" class="btn  btn-success">This is correct</button></form>
            }
            else if (User.IsInRole("Technician") || User.IsInRole("Administrator"))
            {
                <h4>
                    This week there @if (Model.NumAppAnimals == 1)
                    { <text>is 1 animal</text> }
                    else
                    { <text>are @Model.NumAppAnimals animals</text> } (including @Model.GMOCount GMO) in this room.
                    @Html.ActionLink("View All", "Animals", "Rooms", new { id = Model.Room.Id, grps = "1" }, new { @class = "btn btn-sm btn-outline-dark" })
                    @if (Model.GMOCount != 0)
                    {
                    @Html.ActionLink("View GMO", "Animals", "Rooms", new { id = Model.Room.Id, grps = "1", gmo = "1" }, new { @class = "btn btn-sm btn-outline-dark" })
                    }
                </h4>
            }
            <hr />
            <table class="table table-striped">
                <thead><tr><th>Week of</th><th>Count</th></tr></thead>

                @for (DateTime date = Model.startDay; date > DateTime.Now.AddDays(-140); date = date.AddDays(-7))
                {
                    var history = Model.CountHistory.SingleOrDefault(m => m.Timestamp.Date == date.Date);

                    if (history != null)
                    {
                        <tr>
                            <td>
                                @history.Timestamp.Date.ToShortDateString() @if (date.Date == Model.startDay.Date)
                                { <text>(This week)</text> }
                            </td>
                            <td>@history.Count (including @history.GMOCount GMO)</td>
                        </tr>
                    }
                    else
                    {
                        <tr class="danger">
                            <td>@date.ToShortDateString()</td>
                            <td></td>
                        </tr>
                    }
                }
            </table>
        </div>
    }
</div>
<hr />