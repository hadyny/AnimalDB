@model AnimalDB.Repo.Entities.FeedingGroup
@{
    string groupdatedropdown = "<select id=\"groupdatedropdown\" class=\"form-control\">";
    string removegroupdatedropdown = "<select id=\"removegroupdatedropdown\" class=\"form-control\">";
    int count = 0;
}

<div class="feeding">
    @using (Html.BeginForm())
    {
        <input type="hidden" name="state" value="" id="state" />
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.FirstFeed)
        @Html.HiddenFor(m => m.Description)
        @Html.HiddenFor(m => m.Room_Id)
        <div class="row">
            <div class="col-md-1">
                <div class="headercontainer">
                    <table class="titles">
                        <tr><td>Group</td></tr>
                        <tr><td>&nbsp;</td></tr>
                        <tr><td>&nbsp;</td></tr>
                        <tr><td>Base weight</td></tr>
                        <tr><td>85% Base</td></tr>
                        <tr class="blankrow"><td></td></tr>
                    </table>
                </div>
                <div class="feedingtable feedingmargin">
                    <table>
                        @for (DateTime start = DateTime.Now.Date.AddDays(-13); start <= DateTime.Now.Date; start = start.AddDays(1))
                        {
                            string c = "";
                            if (start.DayOfWeek == DayOfWeek.Saturday || start.DayOfWeek == DayOfWeek.Sunday)
                            {
                                c = "class=weekend";
                            }

                            <tr @c>
                                <td>
                                    <span class="dropdown">
                                        @if (start.Date == DateTime.Now.Date)
                                        {
                                            if (Model.Animals.Count(m => m.LastChecked.Date == DateTime.Today.Date) == Model.Animals.Count())
                                            {
                                                <button title="All animals checked" type="button" class="btn btn-sm btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fas fa-check-circle"></span>
                                                </button>

                                            }
                                            else if (Model.Animals.Count(m => m.LastChecked.Date == DateTime.Today.Date) == 0)
                                            {
                                                <button title="Animals not checked" type="button" class="btn btn-sm btn-outline-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fas fa-times-circle"></span>
                                                </button>
                                            }
                                            else
                                            {
                                                <button title="Some animals not checked" type="button" class="btn btn-sm btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fas fa-exclamation-circle"></span>
                                                </button>
                                            }
                                        }
                                        else if (Model.Animals.Count(m => m.MissedChecks.Count(n => n.Timestamp.Date == start.Date) != 0) == 0)
                                        {
                                            <button title="All animals checked" type="button" class="btn btn-sm btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="fas fa-check-circle"></span>
                                            </button>
                                        }
                                        else if (Model.Animals.Count(m => m.MissedChecks.Count(n => n.Timestamp.Date == start.Date) != 0) == Model.Animals.Count())
                                        {
                                            <button title="Animals not checked" type="button" class="btn btn-sm btn-outline-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="fas fa-times-circle"></span>
                                            </button>
                                        }
                                        else
                                        {
                                            <button title="Some animals not checked" type="button" class="btn btn-sm btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="fas fa-exclamation-circle"></span>
                                            </button>
                                        }
                                        <span class="dropdown-menu">
                                            @foreach (var animal in Model.Animals)
                                            {
                                                if (animal.MissedChecks.Count(m => m.Timestamp.Date == start.Date) != 0 || (start.Date == DateTime.Now.Date && animal.LastChecked.Date != DateTime.Now.Date))
                                                {
                                                    <a class="dropdown-item" href="#"><span class="text-danger fas fa-times-circle"></span> @animal.UniqueAnimalId</a>
                                                }
                                                else
                                                {
                                                    <a class="dropdown-item" href="#"><span class="text-success fas fa-check-circle"></span> @animal.UniqueAnimalId</a>
                                                }
                                            }
                                        </span>
                                    </span>
                                    @start.ToString("dd-MMM")
                                </td>
                            </tr>


                            groupdatedropdown += "<option value=\"" + count + "\">" + start.ToString("dd-MMM") + "</option>";
                            removegroupdatedropdown += "<option value=\"" + count + "\">" + start.ToString("dd-MMM") + "</option>";
                            count++;
                        }
                        @{
                            groupdatedropdown += "</select>";
                            removegroupdatedropdown += "</select>";
                        }
                        <tr class="blankrow"><td></td></tr>
                    </table>
                </div>
            </div>
            <div class="col-md-11">
                <div class="row">
                    @Html.EditorFor(m => m.Animals)
                </div>
            </div>
        </div>

        @Html.ActionLink("Cancel", "Groups", new { id = Model.Room_Id }, new { @class = "btn  btn-outline-danger" })

        <button type="button" data-toggle="modal" data-target="#removefeedgroupmodal" class="btn btn-outline-dark ">Remove a group feed</button>


        <div class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-primary">
                <input id="visualCheck" type="checkbox" autocomplete="off" />All visually checked
            </label>
            <button type="button" id="btnGroup" data-toggle="modal" data-target="#feedgroupmodal" class="btn btn-outline-danger ">Feed group</button>
            <button type="button" id="btnPrevious" data-bind="click:FeedPrevious" class="btn btn-outline-danger ">Feed previous</button>
            <button type="button" id="btnFinish" data-bind="click:SaveAndFinish" class="btn btn-outline-danger ">Save and finish</button>
        </div>

    }
</div>

<div class="modal fade" id="feedgroupmodal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Enter amount to feed the group:</h4>
            </div>
            <div class="modal-body">
                <label style="display: inline-table">
                    Amount in grams: <input type="text" class="form-control" id="feedgroupvalue" />
                </label>
                <label style="display: inline-table">
                    Group: <select id="groupdropdown" class="form-control">@Html.Raw(ViewBag.Groups)</select>
                </label>
                <label style="display: inline-table">
                    Date to feed: @Html.Raw(groupdatedropdown)
                </label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary @if (string.IsNullOrEmpty(ViewBag.Groups)) { <text>disabled</text> } " data-bind="click:FeedGroup">Feed</button>
            </div>

        </div>

    </div>
</div>


<div class="modal fade" id="removefeedgroupmodal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Enter group and date to remove feed from:</h4>
            </div>
            <div class="modal-body">
                <label>
                    Group: <select id="removegroupdropdown" class="form-control">@Html.Raw(ViewBag.Groups)</select>
                </label>
                <label>
                    Date to remove: @Html.Raw(removegroupdatedropdown)
                </label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark " data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary " data-bind="click:RemoveFeedGroup">Remove</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="lowweightalert" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Low weight alert</h4>
            </div>
            <div class="modal-body alert alert-danger">
                The weights of the following animals have reached 85% of their base weight:
                <ul data-bind="foreach: LowWeightAnimals">
                    <li data-bind="text:name"></li>
                </ul>
                <br />
                <strong>Increase food amount</strong>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark " data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-outline-danger " data-bind="click:Finish">Continue</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="PhotoModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title animal-photo-name"></h3>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body animal-picture-modal text-center"></div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/Scripts/addFeed.js")
}